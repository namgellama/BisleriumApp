@page "/customers"

<nav class="navbar navbar-light bg-light justify-content-between">
    <h1 class="navbar-brand mb-0 h1">Customers</h1>
    <button class="btn btn-primary" type="button" @onclick="OpenAddCustomerDialog">
        <span class="oi oi-plus" /> Add
    </button>
</nav>

<table class="table">
    <thead>
        <tr>
            <th>Phone number</th>
            <th>Total no of orders</th>
            <th>Created At</th>
            <th>CreatedBy</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var customer in _customers)
        {
                <tr>
                    <td>@customer.PhoneNumber</td>
                <td>@{
                        var customerOrders = CustomersService.GetTotalOrders(customer.PhoneNumber); 
                        <span>@customerOrders</span>
                }</td>
                    <td>@customer.CreatedAt.ToString("MMM dd, yyyy h:mm tt")</td>
                    <td>
                        @{
                            var creator = UsersService.GetById(customer.CreatedBy);
                            <span>@(creator == null ? "Unknown" : creator.Username)</span>
                        }
                    </td>
                    <td>
                        <button 
                                class="btn btn-outline-danger" type="button" @onclick="()=>OpenDeleteCustomerDialog(customer)">
                            <span class="oi oi-delete" /> Delete
                        </button>
                    </td>
                </tr>
        }
    </tbody>
</table>

@if (_showAddCustomerDialog)
{
    <ModalDialog Title="Add Customer" OnClose="@OnAddCustomerDialogClose" OkLabel="Add">
        <form>
            <div class="form-floating my-3">
                <input id="phoneNumber" type="text" class="form-control" @bind="_phoneNumber" placeholder="Phone Number" />
                <label for="phoneNumber">Phone Number</label>
            </div>
        
            @if (!string.IsNullOrEmpty(_addCustomerErrorMessage))
            {
                <AlertMessage Type="danger" Message="@_addCustomerErrorMessage" />
            }
        </form>
    </ModalDialog>
}

@if (_showDeleteCustomerDialog)
{
    <ModalDialog Title="Delete User" OnClose="@OnDeleteCustomerDialogClose" OkLabel="Confirm">
        <p>Are you sure you want to delete <strong>@_deleteCustomer.PhoneNumber</strong> customer and their data?</p>
        @if (!string.IsNullOrEmpty(_deleteCustomerErrorMessage))
        {
            <AlertMessage Type="danger" Message="@_deleteCustomerErrorMessage" />
        }
    </ModalDialog>
}

@code {
    [CascadingParameter]
    private GlobalState _globalState { get; set; }
    private List<Customer> _customers { get; set; }

    private bool _showAddCustomerDialog { get; set; }
    private bool _showDeleteCustomerDialog { get; set; }

    private string _addCustomerErrorMessage { get; set; }
    private string _deleteCustomerErrorMessage { get; set; }

    private Customer _deleteCustomer { get; set; }


    private string _phoneNumber { get; set; }

    protected override void OnInitialized()
    {
        _customers = CustomersService.GetAll();
    }

    private void OpenAddCustomerDialog()
    {
        _showAddCustomerDialog = true;
        _phoneNumber = "";
    }
    private void OnAddCustomerDialogClose(bool isCancel)
    {
        if (isCancel)
        {

            _showAddCustomerDialog = false;
        }
        else
        {
            try
            {
                _addCustomerErrorMessage = "";
                _customers = CustomersService.Create(userId: _globalState.CurrentUser.Id, phoneNumber: _phoneNumber);
                _showAddCustomerDialog = false;
            }
            catch (Exception e)
            {
                _addCustomerErrorMessage = e.Message;
            }
        }
    }

    private void OpenDeleteCustomerDialog(Customer customer)
    {
        _deleteCustomer = customer;
        _showDeleteCustomerDialog = true;
    }
    private void OnDeleteCustomerDialogClose(bool isCancel)
    {
        if (isCancel)
        {

            _showDeleteCustomerDialog = false;
            _deleteCustomer = null;
        }
        else
        {
            try
            {
                _deleteCustomerErrorMessage = "";
                _customers = CustomersService.Delete(_deleteCustomer.Id);
                _showDeleteCustomerDialog = false;
                _deleteCustomer = null;
            }
            catch (Exception e)
            {
                _deleteCustomerErrorMessage = e.Message;
            }
        }
    }
}
